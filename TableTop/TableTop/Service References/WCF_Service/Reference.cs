//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TableTop.WCF_Service {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF_Service.IServer_WCF_Interface", CallbackContract=typeof(TableTop.WCF_Service.IServer_WCF_InterfaceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IServer_WCF_Interface {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer_WCF_Interface/GetData", ReplyAction="http://tempuri.org/IServer_WCF_Interface/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer_WCF_Interface/GetData", ReplyAction="http://tempuri.org/IServer_WCF_Interface/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer_WCF_Interface/performConnection", ReplyAction="http://tempuri.org/IServer_WCF_Interface/performConnectionResponse")]
        void performConnection(bool isGM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer_WCF_Interface/performConnection", ReplyAction="http://tempuri.org/IServer_WCF_Interface/performConnectionResponse")]
        System.Threading.Tasks.Task performConnectionAsync(bool isGM);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServer_WCF_InterfaceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer_WCF_Interface/dummy", ReplyAction="http://tempuri.org/IServer_WCF_Interface/dummyResponse")]
        void dummy();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServer_WCF_InterfaceChannel : TableTop.WCF_Service.IServer_WCF_Interface, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Server_WCF_InterfaceClient : System.ServiceModel.DuplexClientBase<TableTop.WCF_Service.IServer_WCF_Interface>, TableTop.WCF_Service.IServer_WCF_Interface {
        
        public Server_WCF_InterfaceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public Server_WCF_InterfaceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public Server_WCF_InterfaceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public Server_WCF_InterfaceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public Server_WCF_InterfaceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public void performConnection(bool isGM) {
            base.Channel.performConnection(isGM);
        }
        
        public System.Threading.Tasks.Task performConnectionAsync(bool isGM) {
            return base.Channel.performConnectionAsync(isGM);
        }
    }
}
